// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

type BrokerAZDistribution string

const (
	BrokerAZDistribution_DEFAULT BrokerAZDistribution = "DEFAULT"
)

type ClientBroker string

const (
	ClientBroker_PLAINTEXT     ClientBroker = "PLAINTEXT"
	ClientBroker_TLS           ClientBroker = "TLS"
	ClientBroker_TLS_PLAINTEXT ClientBroker = "TLS_PLAINTEXT"
)

type ClusterState string

const (
	ClusterState_ACTIVE           ClusterState = "ACTIVE"
	ClusterState_CREATING         ClusterState = "CREATING"
	ClusterState_DELETING         ClusterState = "DELETING"
	ClusterState_FAILED           ClusterState = "FAILED"
	ClusterState_HEALING          ClusterState = "HEALING"
	ClusterState_MAINTENANCE      ClusterState = "MAINTENANCE"
	ClusterState_REBOOTING_BROKER ClusterState = "REBOOTING_BROKER"
	ClusterState_UPDATING         ClusterState = "UPDATING"
)

type ClusterType string

const (
	ClusterType_PROVISIONED ClusterType = "PROVISIONED"
	ClusterType_SERVERLESS  ClusterType = "SERVERLESS"
)

type ConfigurationState string

const (
	ConfigurationState_ACTIVE        ConfigurationState = "ACTIVE"
	ConfigurationState_DELETE_FAILED ConfigurationState = "DELETE_FAILED"
	ConfigurationState_DELETING      ConfigurationState = "DELETING"
)

type CustomerActionStatus string

const (
	CustomerActionStatus_ACTION_RECOMMENDED       CustomerActionStatus = "ACTION_RECOMMENDED"
	CustomerActionStatus_CRITICAL_ACTION_REQUIRED CustomerActionStatus = "CRITICAL_ACTION_REQUIRED"
	CustomerActionStatus_NONE                     CustomerActionStatus = "NONE"
)

type EnhancedMonitoring string

const (
	EnhancedMonitoring_DEFAULT                 EnhancedMonitoring = "DEFAULT"
	EnhancedMonitoring_PER_BROKER              EnhancedMonitoring = "PER_BROKER"
	EnhancedMonitoring_PER_TOPIC_PER_BROKER    EnhancedMonitoring = "PER_TOPIC_PER_BROKER"
	EnhancedMonitoring_PER_TOPIC_PER_PARTITION EnhancedMonitoring = "PER_TOPIC_PER_PARTITION"
)

type KafkaVersionStatus string

const (
	KafkaVersionStatus_ACTIVE     KafkaVersionStatus = "ACTIVE"
	KafkaVersionStatus_DEPRECATED KafkaVersionStatus = "DEPRECATED"
)

type NodeType string

const (
	NodeType_BROKER NodeType = "BROKER"
)

type ReplicationStartingPositionType string

const (
	ReplicationStartingPositionType_EARLIEST ReplicationStartingPositionType = "EARLIEST"
	ReplicationStartingPositionType_LATEST   ReplicationStartingPositionType = "LATEST"
)

type ReplicationTopicNameConfigurationType string

const (
	ReplicationTopicNameConfigurationType_IDENTICAL                          ReplicationTopicNameConfigurationType = "IDENTICAL"
	ReplicationTopicNameConfigurationType_PREFIXED_WITH_SOURCE_CLUSTER_ALIAS ReplicationTopicNameConfigurationType = "PREFIXED_WITH_SOURCE_CLUSTER_ALIAS"
)

type ReplicatorState string

const (
	ReplicatorState_CREATING ReplicatorState = "CREATING"
	ReplicatorState_DELETING ReplicatorState = "DELETING"
	ReplicatorState_FAILED   ReplicatorState = "FAILED"
	ReplicatorState_RUNNING  ReplicatorState = "RUNNING"
	ReplicatorState_UPDATING ReplicatorState = "UPDATING"
)

type StorageMode string

const (
	StorageMode_LOCAL  StorageMode = "LOCAL"
	StorageMode_TIERED StorageMode = "TIERED"
)

type TargetCompressionType string

const (
	TargetCompressionType_GZIP   TargetCompressionType = "GZIP"
	TargetCompressionType_LZ4    TargetCompressionType = "LZ4"
	TargetCompressionType_NONE   TargetCompressionType = "NONE"
	TargetCompressionType_SNAPPY TargetCompressionType = "SNAPPY"
	TargetCompressionType_ZSTD   TargetCompressionType = "ZSTD"
)

type UserIdentityType string

const (
	UserIdentityType_AWSACCOUNT UserIdentityType = "AWSACCOUNT"
	UserIdentityType_AWSSERVICE UserIdentityType = "AWSSERVICE"
)

type VPCConnectionState string

const (
	VPCConnectionState_AVAILABLE    VPCConnectionState = "AVAILABLE"
	VPCConnectionState_CREATING     VPCConnectionState = "CREATING"
	VPCConnectionState_DEACTIVATING VPCConnectionState = "DEACTIVATING"
	VPCConnectionState_DELETING     VPCConnectionState = "DELETING"
	VPCConnectionState_FAILED       VPCConnectionState = "FAILED"
	VPCConnectionState_INACTIVE     VPCConnectionState = "INACTIVE"
	VPCConnectionState_REJECTED     VPCConnectionState = "REJECTED"
	VPCConnectionState_REJECTING    VPCConnectionState = "REJECTING"
)
